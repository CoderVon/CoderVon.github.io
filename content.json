{"meta":{"title":"Von的备份站","subtitle":"练习时长两年半的码农","description":"这是一个备份站，仅作为个人文章备份使用","author":"Von","url":"von.cool"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"about/index.html","permalink":"von.cool/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"client/index.html","permalink":"von.cool/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"comment/index.html","permalink":"von.cool/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"donate/index.html","permalink":"von.cool/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"lab/index.html","permalink":"von.cool/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"bangumi/index.html","permalink":"von.cool/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"music/index.html","permalink":"von.cool/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"von.cool/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"tags/index.html","permalink":"von.cool/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"von.cool/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"links/index.html","permalink":"von.cool/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"von.cool/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"Wordpress博客搭建","slug":"Wordpress博客搭建","date":"2020-04-08T19:17:13.000Z","updated":"2020-04-10T08:47:16.116Z","comments":true,"path":"2020/04/09/Wordpress博客搭建/","link":"","permalink":"von.cool/2020/04/09/Wordpress博客搭建/","excerpt":"","text":"个人博客搭建流程在学习了html+css+js的一些基础前端知识以后开始了对个人博客的构建。现在的博客框架有很多，hexo、hugo、jekyll、wordpress、halo之类的，搭建方式大同小异。最后我这里选择的是Wordpress，原因也很简单，就是用的人多，出现问题也比较好解决。 步骤： 选择服务器：我这里选择的是阿里云的服务器，系统选择centos7; 安装环境：可以选择自己手动安装对应的web服务器数据库运行时环境之类的，这里我选择了直接安装宝塔界面，因为宝塔界面里有常用环境的一键安装，而且图形化界面操作起来也很方便； yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh 安装完成后，会显示类似这样的提示 bt-panel-url:http://xxx.xxx.xxx.xxx:8888/adfewax/ username:sjinshj password:ssdfafg 其中url就是宝塔界面的面板了，把url复制到浏览器打开就可以进入宝塔面板。注意的是需要在服务器上先把端口8888打开,否则是无法访问的。 第一次进入宝塔界面需要选择环境，LNMP环境比较轻量级，适合个人使用。安装环境的同时可以进入面板设置把面板端口、安全入口、面板用户、面板密码之类的都修改一下。如果之后忘记了账号和密码，可以进ssh输入重置密码的命令：cd /www/server/panel &amp;&amp; python tools.pyc panel password,其中password就是要修改的密码。如果是宝塔面板6.x和以上版本的话，直接输入bt就进入宝塔面板中文的命令行图形界面。 等宝塔安装的LNMP环境装好后，再去服务器上开放一个80端口（用于http协议），一个21端口（用于FTP），一个任意端口（用于数据库访问）； 新建站点：在宝塔界面的网站面板点击添加站点，域名填自己的域名或者服务器公网ip，注意根目录位置，以后80端口默认访问的位置就是这里，FTP选择创建、数据库选择创建MySQl和utf8，php版本选择当前环境的版本，然后创建就好了； 新建数据库：打开宝塔界面的数据库面板，点击phpMyAdmin，可以打开phpMyadmin的图形界面，在图形界面中新建一个数据库用来存放wordpress的相关数据，记住数据库名字，后面构建wordpress时要用，注意排序规则选择要utf8-general-ci； 建立博客：官网下载wordpress压缩包传到上面第3步中的根目录位置中，把根目录原来的文件删除，再把wordpress的文件解压放在根目录中，至此博客其实已经搭好了，接下来就进行博客的配置了； 配置博客：浏览器中输入第3步中的域名地址，就可以进入博客的初始化界面了，语言选择中文以后填写就行了，值得注意的是有一个配置数据库的地方需要把第4步中在phpmyadmin中建立的数据库名字填入，数据库账号和密码可以回到宝塔面板中的数据库面板里的root密码中查看，其他的按照默认的就行了，闭着眼睛点下一步。至此就搭建好了一个wordpress博客，接下来在wordpress后台中选择一个自己中意的主题就可以开始写博客了。值得注意的事情是workpress无法原生支持MD语法，可以去下载WP-Githuber-MD插件，这样就可以支持MD语法了； 配置伪静态：回到宝塔面板的网站面板，打开刚才创建的站点的设置界面，在伪静态一栏中输入下面的代码就可以了 location / { try_files $uri $uri/ /index.php?$args; } rewrite /wp-admin$ $scheme://$host$uri/ permanent; 自定义主题wordpress中可以直接添加额外的css来自定义博客的样式，当然也可以自己直接定制一个自己的主题；目前还在学习修改主题和自定义主题。","categories":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}]},{"title":"使用Hexo+Github/码云建立博客并且更改自定义域名","slug":"使用Hexo建立博客","date":"2020-04-08T18:15:23.000Z","updated":"2020-04-10T10:18:04.855Z","comments":true,"path":"2020/04/09/使用Hexo建立博客/","link":"","permalink":"von.cool/2020/04/09/使用Hexo建立博客/","excerpt":"","text":"使用Hexo+Github/码云建立博客并且更改自定义域名本来没打算用hexo建博客的，整那么多博客也没啥用，不过刚才突然发现自己有一个无法备案的域名，想了想正好用来给GithubPages做自定义域名，毕竟域名都买了也不能浪费嘛。说干就干，现在开始。 安装好node.js这个没什么好说的 点我进入官网，下载完之后一直下一步就行了，windows记得配置好环境变量; 安装Hexo既然要搞Hexo博客，自然得下载Hexo。PowerShell打开输入命令就行了 npm install -g hexo 如果速度太慢，挂梯子或者用下条指令切换成国内淘宝团队做的镜像cnpm，cnpm基本可以完全代替npm了，淘宝镜像和官方现在是每10分钟同步一次。 npm install -g cnpm --registry=http://registry.npm.taobao.org cnpm install -g hexo 初始化Hexo命令行输入指令到需要建立博客的位置之后初始化hexo，接下来git会自动去clone hexo的本体和一个主题，如果报错了先去装个git并把环境变量配置好 hexo init 运行Hexo输入下面的指令会弹出一个地址，通过这个地址就可以访问hexo博客了 hexo s 部署到Github和码云上首先在Github或者码云上建立一个空的仓库，仓库名字要和你的Github名字一摸一样。接着回到hexo的根目录，打开_config.yml文件，修改其中的deploy的内容 deploy: type: git repo: github: https://github.com/CoderVon/CoderVon.github.io.git,master gitee: https://gitee.com/codervon/CoderVon.gitee.io.git,master 如果习惯用ssh可以把链接改成ssh的，分支如果不填写的话默认也是master;接下来就是输入指令部署就可以了 hexo d 等部署完成以后，就可以通过 yourname.github.io / yourname.gitee.io来访问hexo博客了； 更改自定义域名如果你没有云服务器又想用自己的域名来访问博客的话，就需要去进行域名解析；首先在控制台中输入命令查看自己的GitHubPages的IP地址（下面假设ip地址为111.111.111.111） ping yourname.github.io 接下来去进行域名解析，在域名解析中添加两条解析： 记录类型：CNAME 主机记录：WWW 记录值：yourname.github.io 记录类型：A 主机记录：@ 记录值：111.111.111.111最后回到GitHub的这个仓库的设置中，往下滑找到GithubPages的设置，在CustomDomain中填入域名并且保存。但是这样每次重新部署博客之后都需要这样重新操作一次，为了一劳永逸，可以在博客根目录下的source文件夹中添加文件CNAME，里面填写域名。这样域名就不需要重新设置了。注意：名字就叫CNAME，没有后缀名。顺便说下，目前没在码云上找到自定义域名的选项。 一些Hexo基本操作 hexo clean #清除缓存文件 (db.json) 和已生成的静态文件 (public) hexo new [layout] &lt;title&gt; #新建一篇文章，不设置layout会调用_config.yml中的default_layout hexo g #生成静态文件 hexo s #启动服务器。默认情况下，访问网址为： http://localhost:4000/。 -p可用来设置端口 优化自定义域名访问速度由于GitHub毕竟在境外，所以单纯把域名解析到github上的话在境内访问速度不尽如人意，而且GitHub拒绝百度的访问，对境内的小伙伴实在不友好，最好的解决办法就是同时把域名解析到境内的Coding和境外的GitHub上，在域名解析中添加coding的解析设为默认，把GitHub的解析设为境外，这样就可以解决访问速度的问题了。注意：最好先解析到codidng中把coding的证书申请完再添加GitHub的解析记录，不然可能会申请不到证书。","categories":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}]},{"title":"C#盲区","slug":"C_sharp盲区","date":"2020-04-08T17:28:22.000Z","updated":"2020-04-10T08:47:17.838Z","comments":true,"path":"2020/04/09/C_sharp盲区/","link":"","permalink":"von.cool/2020/04/09/C_sharp盲区/","excerpt":"","text":"Checked{} 用于检查数值计算是否溢出，若移除则抛出异常。对float和double无效，因为float和double有无限大和无限小值 byte sbyte short ushort 没有自己的算数运算符，C#会隐式把它们转换为更大的整数类型 float double的特殊值有:NaN、PositiveInfinity、NegativeInfinity、-0.0；其中1/-0.0等于NegativeInfinity,以此类推； 使用==判断时，NaN不等于任何值，包括NaN;使用object.Equals()时，两个NaN相等;可用float.IsNaN()判断NaN； &amp;和|也可以用来进行与或的逻辑判断，但是没有短路机制，所以最好还是只用来按位与或 string之间大量用+拼接比较消耗性能,大量拼接时最好使用string.build(); 字符串插值 \\$作为前缀，可在字符串内用{}包含任何C#表达式，会调用对应的toString()方法或者等效方法，在插值中需要输入” {“时应该输入\"{{ “。默认支支持单行，除非使用@,并且$要在@前; ref out.形参和实参中使用ref和out关键字可以使值类型按照引用传递,out通常用于返回多个参数，私有的ou可用”_”代替 Params参数中可用Params修饰一个数组，在实参中就可一动态输入任意数量的该类型参数。Params必须时方法中的最后一个参数. 可选参数 形参中直接赋值初始化可以让这个参数变为可选参数，在实参中可以不输入该参数，若未输入该参数，则自动变为初始值。可选参数不能使用ref或者out，必填参数必须在可选参数前面，Params例外，仍然要在最后 命名参数 实参中可以使用例如x:1,y:2这样的方式传参，这个传的参可以不用考虑参数输入顺序 ref locals可以引用一个数组的某个位置 右结合操作符：赋值 lambda null合并操作符 null条件操作符，其余所有操作符都是左结合的 null合并操作符 “??”如”s1=null;s2=s1??some”,则s2=some，若s1不为null,则s2=s1; null条件操作符 “?.”用于调用成员变量和方法，用法同”.”；若为空引用则返回null而不抛出异常 ? 拥有短路特性，“？”前出现null则不进行后面的表达式计算 可空值类型 值类型后加一个”?”可使其变为可空值类型，如”int? n=null;” Nullable&lt;&gt;也可声明可空值类型 switch现在可以匹配类型 Null==Null的结果是true 字符串没有内容 可分为两种:null空字符串和空白字符串","categories":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}]},{"title":"CSS学习记录","slug":"CSS学习","date":"2020-04-08T17:19:12.000Z","updated":"2020-04-10T08:48:53.057Z","comments":true,"path":"2020/04/09/CSS学习/","link":"","permalink":"von.cool/2020/04/09/CSS学习/","excerpt":"","text":"CSS学习记录创建css的方法 使用元素内嵌样式表 元素内 使用文档内嵌样式表 head内 使用外部样式表 导入方式：\\ Style元素 font-size 控制文本大小 color 控制文本颜色 border 边框设置 -border-width 边框宽度 -border-style 边框样式 -border-color 边框颜色 -border-up 上边框 其他同理 -border-radius 设置圆角边框；border-radius:20px/15px 为设置圆心离边框左右距离20px,上下距离15px的四个圆角 background 背景设置 -background-color 背景颜色 -background-position 背景位置 -background-size 背景图像尺寸 -background-repeat 背景重复方式 -background-origin -background-clip -background-attachment 设置背景是否随滚轮移动 -background-image 设置背景图片 text 文本设置 -text-align 对齐方式 -direction 书写方向,对中文没什么用处 -letter-spacing 字间距 -word-spacing 单词间距 英语有效 -line-height 行高 -text-indent 首行缩进 -text-decoration 文本装饰 -text-transform 文本大小写转换 -text-shadow 文本阴影，参数为 水平阴影距离 竖直阴影距离 模糊程度 颜色 font 字体设置 -font-family 显示字体 -font-size 字体大小 -font-style 字体类型 -font-variant 小型大写字母 -font-weight 字体粗细设置 transition 过渡设置 -transition-delay 延迟时间 -transition-duration 动画时间 -transiton-property 控制过渡的属性是哪个 -transiton-timing-function 过渡使用的贝塞尔曲线 animation 动画设置 -transition-delay 延迟时间 -transition-duration 动画时间 -transition-name 动画名字 动画名字在@keyframes中使用;@keyframes中效果是从from到to的 -transition-iteration-count 动画次数 从from到to算一次，反过来也算一次 -animation-direction 动画方向 -animation-fill-mode 规定填充格式 常用forwards使动画最后停留在最后一帧 transform 变换设置 -transform:rotate(ndeg) 旋转变换n度 -transform:scale(n) 缩放n倍 -transform-origin 锚点 基本选择器 根据类型选择元素 - a{ }则为\\&lt;a&gt;标签选择器 选择所有元素 - *{ }为所有选择器 根据类选择元素- 标签内属性class=&quot;a&quot;，这个是一个全局属性 - .a{}为类a的选择器 根据ID选择元素- 标签内属性id=&quot;b&quot;，每个元素id唯一，这个是一个全局属性 - #b{}为id为b的选择器 根据属性选择元素- 标签内任意属性都可以使用 例如herf - [herf]{}为属性有herf的选择器 - [herf:11.html]{}为属性有herf:11.html的选择器 :选择器动作- a:hover{}为冒号选择器，有很多种 各浏览器私有属性-webkit chrome、safari私有属性 -o Opera私有属性 -moz firefox浏览器私有属性 -ms IE浏览器私有属性 盒子模型","categories":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}]},{"title":"HTML学习记录","slug":"HTML学习","date":"2020-04-08T17:18:19.000Z","updated":"2020-04-10T08:27:32.728Z","comments":true,"path":"2020/04/09/HTML学习/","link":"","permalink":"von.cool/2020/04/09/HTML学习/","excerpt":"","text":"HTML学习记录html注释&lt;!-- --&gt; &lt;br/&gt;换行 html基本结构&lt;!DOCTYPE html&gt;&lt;!--这是让浏览器得知自己要处理的内容是html--&gt; &lt;html&gt;&lt;!--文档中html部分的开始--&gt; &lt;head&gt;&lt;!--提供有关文档内容合标注信息的--&gt; &lt;meta charset===&quot;UTF-8&quot;&gt;&lt;!--meta 提供元数据--&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;这是标题&lt;/title&gt;&lt;!--用于标题的显示--&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;这个更大&lt;/h1&gt; 靠谱学院 大家好，我是大哥 &lt;/body&gt; &lt;/html&gt; html基础\\&lt;a&gt; 超链接 \\&lt;b&gt; 粗体 \\&lt;u&gt; 下划线 \\&lt;s&gt; 删除线 表格&lt;table&gt;用于创建一个表格 &lt;tr&gt;创建一行表格 table row &lt;td&gt;表格数据 table data &lt;td colspan=&quot;2&quot;&gt; 表示两行单元格合并成一个 &lt;td rowspan=&quot;2&quot;&gt; 表示两列单元格合并成一个 &lt;th&gt;表格的头部使用，使得字体居中加粗 table head &lt;thead&gt;表头 &lt;tbody&gt;表中 &lt;tfoot&gt;表脚 列表&lt;ol&gt;定义有序列表项 &lt;&lt;ol type=&quot;a&quot;&gt;&gt;type决定有序列表排序的字是abcd或者1234等等 &lt;ol reversed&gt;列表名称反转，如4321 &lt;ul&gt;无列表 &lt;li&gt;具体的一项 表单表单是用于用户输入的窗口 关键表单元素 \\ 表单 属性 method action \\ 单行文本框 属性 type text 单行文本框 password 密码 button 按钮 无法与js协作 submit 提交表单 range 滑块 提供数字 min 最小值 max 最大值 step 步长 number 数字 手动输入 min max checkbox 单选框 radio 单选框 选中不可取消 若属性name相同则为同一组 其中一个必定选中 email 检测格式 tel 检测格式 url 检测格式 date 获取时间 color 获取颜色 search 搜索框 hidden 蕴藏 但是提交表单时依然存在 image 图片按钮 src中填入图片路径 width填入宽度 file 获取文件 multiple一次允许多个文件 Required必须上传一个文件 在使用input元素上传文件提交表单时要在form设置\\&lt;enctype=”multipart/form-data”&gt; value 占位符 placeholder 不占位仅显示 maxlength 最大长度 size 控制单行文本框可输入文本长度 readonly 只读 list 与下文中datalist的id用同一个key \\ 多行文本框 属性 rows 行长 cols 列长 \\ 按钮 通过onclick用来和js协作的 \\ \\ 下拉选项 不能自行输入 \\\\ 下拉选项 可以自行输入，必须搭配input使用 需要填写ID属性与一个input里的list属性对应 \\图片 alt为备用内容 客户端分区响应图\\ 是客户端分区响应图的关键元素\\ 可以有多个，每个各自代表图像上可以被点击的一块区域 shape coord属性的值解析 分为rect（有四个整数组成，分别为图像的左边缘、上边缘、右边缘、下边缘） circle(三个整数组成，分别为圆心坐标，圆的半径) poly default coords herf 链接 alt 备用内同 视频播放\\ 播放视频 可以嵌入\\src视频地址 width视频宽度 height视频长度 autoplay网页完成后自动播放视频 controls增加进度条和暂停控制preload预先载入视频（None-不会载入 Metadata载入第一帧 Auto载入整个视频为默认状态） loop循环播放poster封面\\ 视频源，若video标签的视频无法播放会跳入source寻找视频播放 音频播放\\ 播放音频和视频播放参数基本一样","categories":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}]},{"title":"JavaScript学习记录","slug":"JS学习","date":"2020-04-08T16:17:17.000Z","updated":"2020-04-10T08:47:38.091Z","comments":true,"path":"2020/04/09/JS学习/","link":"","permalink":"von.cool/2020/04/09/JS学习/","excerpt":"","text":"JavaScript学习javascript嵌入方式 通过\\&lt;script>标签内直接内嵌，计较推荐内嵌到\\之间或者\\后面 导入外链的js文件，形同\\\\ 行间事件，直接把js代码写入事件的简单操作（如鼠标点击移入等）中，形如\\Javascript组成 ECMAScript 编程语法和基础核心 DOM 文档对象模型，控制网页元素等 BOM 浏览器对象模型，与浏览器进行互动，弹出对话框获取分辨率等输入输出语句 prompt()//输入框 alert()//弹出框 console.log()//控制台输出JavaScript是弱类型语言，由值决定变量类型 number 最大值：MAX_VALUE 最小值：MIN_VALUE Infinity:无穷大 NaN：非数值 boolean string “”和’’均可表示字符串 undefined 声明变量但未赋值的类型 null object数据类型转换转换为string：toString()、String()强制类型转换、通过”+”进行隐式转换转换为number：parseInt()和parseFloat()、Number()强制类型转换、通过算术运算符(-*/)隐式转换转换为Boolean：Boolean()；0、NaN、Null、undefined、空字符串转换为false,其他的为true;运算符优先级https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Operator_Precedence数组 尽量避免使用new Array() Array.length是可读写的； pop()和push()分别是在数组结尾弹出和压入数据 shift()和unshift()则是在数组开头弹出和压入数据函数 用function声明函数 function name(){}或者var name=function(){} 若实参个数多于形参，则多余的不传入 若实参个数少于形参，则视为没有接收值（undefined） arguments里存储了所有传递过来的实参 es6以后才有块级作用域对象 利用字面量{}创建对象 如var obj{} 对象内的属性或者方法采取键值对的形式 键 属性名：值 属性值 多个属性或者方法中奖用逗号隔开 //创建对象方式1 var man={ name:&quot;张三&quot;, age:18, sex:&quot;男&quot;, say:function(){ console.log(&quot;HelloWorld&quot;); } } //创建对象方式2 通过追加属性和函数 man=new Object();//创建空对象 man.name=&#39;张三&#39;; man.age=18; man.sex=&#39;男&#39;；//追加属性 man.say=function(){ console.log(&quot;HelloWorld&quot;); }//追加函数 //创建对象方式3 通过构造函数 function Person(name,age,sex){ this.name=name; this.age=age; this.sex=sex; this.say=function(){ console.log(&quot;HelloWorld&quot;); } } man=new Person(&#39;张三&#39;,18,&#39;男&#39;); //调用对象的属性的两种方法 console.log(man.name); console.log(man[&#39;name&#39;]); 调用对象的函数 man.say(); //遍历对象里的所有元素 for(var k in man){ console.log(k);//name age sex say console.log(man[k]);//张三 18 男 say(){console.log(&quot;HelloWorld&quot;);} } 预解析 js引擎运行js分为两步：预解析 代码执行 预解析 js会把js里所有的var和function提升到当前作用域的最前面 变量预解析：将所有的变量声明提升到当前作用域最前面 不提升赋值操作 函数预解析：将所有的函数声明提升到当前作用域最前面 不调用函数","categories":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"von.cool/categories/技术/"}]}]}